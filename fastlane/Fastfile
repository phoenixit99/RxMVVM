default_platform(:ios)

platform :ios do
desc "Test distribution "
# lane :test do |options|
#   increment_build_number(xcodeproj: "RxMVVM.xcodeproj")
#   clean_build_artifacts
#   commit_version_bump(xcodeproj: "RxMVVM.xcodeproj")

#   current_branch = git_branch
#   sh "git pull origin " + current_branch

#   push_to_git_remote(
#     remote: "origin",         # optional, default: "origin"
#     local_branch: "HEAD",  # optional, aliased by "branch", default: "master"
#     remote_branch: "dev", # optional, default is set to local_branch
#     force: false,    # optional, default: false
#     tags: false     # optional, default: true
#   )
# end

 # ------------ Build project -------------
lane :build do
clear_derived_data
xcclean(workspace:"RxMVVM.xcworkspace",scheme:"RxMVVM")
# get_certificates(
#    development:false,    
#    force:false,          
#    username: <your_apple_id>,   
#    team_name: <your_team_name>,
#    filename: <cert_file_name>, 
#    output_path: <cert_output_path>
# )        

# get_provisioning_profile(
#    adhoc: true,    
#    app_identifier: <your_app_id>,          
#    username: <your_apple_id>, 
#    output_path: <cert_output_path>
# )

end

 # ------------ Archive file -------------
lane :release do
  cocoapods
 
  current_branch = git_branch

  sh "git pull origin " + current_branch
  # Providing the xcodeproj is optional
  new_build = increment_build_number(xcodeproj: "RxMVVM.xcodeproj")
  new_version = new_build.to_i + 1 
  # Commit the version bump
  clean_build_artifacts

  commit_version_bump(message: "Version Bump to " + new_version.to_s,
    xcodeproj: "RxMVVM.xcodeproj")
  
  push_to_git_remote(
    remote: "origin",         # optional, default: "origin"
    local_branch: "HEAD",  # optional, aliased by "branch", default: "master"
    remote_branch: "dev", # optional, default is set to local_branch
    force: false,    # optional, default: false
    tags: false     # optional, default: true
  )
  gym(scheme: "RxMVVM",
        export_method: "ad-hoc")
end

 # ------------ upload file to appcenter -------------
lane :deploy do
  appcenter_upload(
  api_token: "9de01f054ce092ef372fa63bc7aab84f9f0588e4",
  owner_name: "hoanguit",
  owner_type: "user", # Default is user - set to organization for appcenter organizations
  app_name: "RxSample",
  file: "./build/RxMVVM.ipa",
  notify_testers: true # Set to false if you don't want to notify testers of your new release (default: `false`)
)
telegram(
  token: '1894622265:AAGoAgYoi7KJCt6ZdpU_DctZqRLrkpf97ng', # get token from @BotFather
  chat_id: '-1001572843871',
  text: "Hey Robert, Today is a beautiful day!. Please enjoy with new build"
)
end

error do |ex|
  telegram(
    token: '1894622265:AAGoAgYoi7KJCt6ZdpU_DctZqRLrkpf97ng', # get token from @BotFather
    chat_id: '-1001572843871', 
    text: "Hey Robert. Are you busy ? Please fix build now"
  )
end

end
