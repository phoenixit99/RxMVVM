default_platform(:ios)

acGrougVN = "newone"
acGroupAll = "owner%20project"

testDest = acGroupAll

platform :ios do
desc "Test distribution "

lane :build do
clear_derived_data
xcclean(workspace:"RxMVVM.xcworkspace",scheme:"RxMVVM")
end

lane :test do
  cocoapods
  scan(
      workspace:"RxMVVM.xcworkspace",
      scheme:"RxMVVM",
      clean: true
    )
end

 # ------------ Archive file -------------

 private_lane :setVar do |options| 
    testDest = (options[:qc] == true ? acGroupAll : acGrougVN)  
  end

lane :release do
  current_branch = git_branch
  cocoapods
  sh "git pull origin " + current_branch
  # Providing the xcodeproj is optional
  new_build = increment_build_number(xcodeproj: "RxMVVM.xcodeproj")
  new_version = new_build.to_i + 1 
  # Commit the version bump
  clean_build_artifacts

  commit_version_bump(message: "Version Bump to " + new_version.to_s,
    xcodeproj: "RxMVVM.xcodeproj")
  
  push_to_git_remote(
    remote: "origin",         # optional, default: "origin"
    local_branch: "HEAD",  # optional, aliased by "branch", default: "master"
    remote_branch: "dev", # optional, default is set to local_branch
    force: false,    # optional, default: false
    tags: false     # optional, default: true
  )
  gym(scheme: "RxMVVM",
        export_method: "ad-hoc")
end

 # ------------ upload file to appcenter -------------
lane :deploy do |options|
  setVar(qc: options[:mirQa])

  appcenter_upload(
  api_token: "9de01f054ce092ef372fa63bc7aab84f9f0588e4",
  owner_name: "hoanguit",
  owner_type: "user", # Default is user - set to organization for appcenter organizations
  app_name: "RxSample",
  file: "./build/RxMVVM.ipa",
  notify_testers: true,
  destinations:testDest,
  destination_type: "group"
)
telegram(
  token: '1894622265:AAGoAgYoi7KJCt6ZdpU_DctZqRLrkpf97ng', # get token from @BotFather
  chat_id: '-1001572843871',
  text: "Hey Robert, Today is a beautiful day!. Please enjoy with new build"
)
end


 # ------------ upload file to appcenter -------------
 lane :report do |options|
    xcov(
        workspace: "RxMVVM.xcworkspace",
        scheme: "RxMVVM",
        output_directory: "report",
        include_test_targets: true
      )
end
  

error do |ex|
  telegram(
    token: '1894622265:AAGoAgYoi7KJCt6ZdpU_DctZqRLrkpf97ng', # get token from @BotFather
    chat_id: '-1001572843871', 
    text: "Hey Robert. Are you busy ? Please fix build now in "  + testDest
  )
end

end
